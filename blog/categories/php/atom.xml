<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: PHP | andy's note]]></title>
  <link href="http://amenouta.github.com/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://amenouta.github.com/"/>
  <updated>2012-10-17T10:42:22+08:00</updated>
  <id>http://amenouta.github.com/</id>
  <author>
    <name><![CDATA[andy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Yii Framework development environment]]></title>
    <link href="http://amenouta.github.com/blog/2012/10/20/yiienvironment/"/>
    <updated>2012-10-20T22:42:00+08:00</updated>
    <id>http://amenouta.github.com/blog/2012/10/20/yiienvironment</id>
    <content type="html"><![CDATA[<p><img src='https://dl.dropbox.com/u/16035461/blog/yiilogo.png'></p>

<p>上一篇有稍微提到過，雖然10/11才開始上班，但是有先跟我說工作上會需要使用Yii Framework來開發平台，跟面試的時候談到預計使用Codeigniter有點出入，不過當然就是趕快在上班前先熟悉一下Yii。</p>

<p>稍微看了一下，Yii感覺跟CI相較起來比較複雜，因為還不太熟悉，所以當然是先下載之後照著官網上面的教學一步一步照著做。</p>

<!-- more -->


<p>看網路上討論提到預設的repository支援Ubuntu 11.04(natty)的是8.x.x版的樣子，還是想裝新一點的版本，所以參考網路上提供的，加入私人維護的頻道來取得較新的版本。</p>

<p><code>
apt-get install python-software-properties
add-apt-repository ppa:pitti/postgresql
</code>
安裝 <code>python-software-properties</code> 之後才能使用 <code>add-apt-repository</code>指令加入repository。如果不想安裝的話需要自己更改<code>/etc/apt/source.list</code>檔案加入路徑之後還要跑<code>apt-key</code>指令去取得Key之後才能使用，因為比較麻煩這邊就不探討，因為我選擇使用<code>add-apt-repository</code>來處理。</p>

<p>安裝完成之後先更新套件清單再安裝相關套件</p>

<p><code>
apt-get update
</code>
安裝 <code>PostgreSQL</code> <code>php5-pgsql</code>(讓PHP可以使用PostgreSQL) 還有用來管理的套件<code>phppgadmin</code>(PostgreSQL 的 phpMyadmin)</p>

<p><code>
apt-get install postgresql php5-pgsql phppgadmin
</code>
安裝完記得重新啟動 apache</p>

<p><code>
/etc/init.d/apache2 restart
</code>
到這邊，<code>PostgreSQL</code>相關的基本套件就都安裝好了。 接下來是兩個自己使用上需求會用到的設定。</p>

<p>PostgreSQL預設是會建立一個系統帳號<code>postgres</code>，在Ubuntu中要直接進入主控台執行SQL的時候，需要以該帳號才能執行其主控台指令<code>psql</code>，如下</p>

<p><code>
su postgres
psql
</code>
因為不想每次使用<code>psql</code>指令都要切換使用者，所以就要更改一下設定檔，下圖1中的<code>peer</code>改成<code>trust</code></p>

<p><code>
vim /etc/postgresql/9.1/main/pg_hba.conf
</code>
<img src='https://dl.dropbox.com/u/16035461/blog/postgres1.png'><br/>
圖1<br/>
<img src='https://dl.dropbox.com/u/16035461/blog/postgres2.png'><br/>
圖2</p>

<p>在vim中存檔離開<code>:wq</code>之後重新啟動PostgreSQL</p>

<p><code>
/etc/init.d/postgresql restart
</code>
之後就可以在未切換系統使用者的狀態下，直接輸入指令進入PostgreSQL主控台進行操作。</p>

<p><code>
psql -U postgres
</code></p>

<p>接下來的部分是因為我個人習慣在自己的電腦上面使用<code>Navicat</code>這套資料庫管理系統來進行操作，所以資料庫需要設定成可以讓外部連線登入操作，相關設定如下。</p>

<p>因為可以讓遠端登入，預設帳號沒有密碼，所以先更改密碼。</p>

<p><code>
psql -U postgres
alter user postgres with password 'postgres';
\q
</code></p>

<p>接著修改<code>postgresql.conf</code>設定檔</p>

<p><code>
vim /etc/postgresql/9.1/main/postgresql.conf
</code>
在檔案中搜尋 <code>listen_addresses</code> 後設定為 <code>listen_addresses = '*'</code> 後儲存關閉</p>

<p>修改<code>pg_hba.conf</code>設定檔
<code>
vim /etc/postgresql/9.1/main/pg_hba.conf
</code>
如下圖3，加入第94行至檔案中
<img src='https://dl.dropbox.com/u/16035461/blog/postgres3.png'><br/>
圖3</p>

<p>最後重開PostgreSQL後即完成，可從遠端登入進行管理。</p>

<p><code>
/etc/init.d/postgresql restart
</code></p>

<p>附錄：<br/>欄位型態 <a href='http://www.postgresql.org/docs/9.1/static/datatype.html'>http://www.postgresql.org/docs/9.1/static/datatype.html</a><br/>
相關功能路徑 <code>/usr/lib/postgresql/9.1/bin</code></p>

<p>後記：PostgreSQL的功能蠻複雜的，才剛開始看，還有很多要研究的，相關設定如果較有心得之後會再陸續分享，感謝觀看。</p>
]]></content>
  </entry>
  
</feed>
